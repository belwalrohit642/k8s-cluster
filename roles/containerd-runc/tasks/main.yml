---
# tasks file for k8scluster

- name: Include variables depending on flavor
  ansible.builtin.include_vars:
    file: "vars.yml"
  tags:
    - containerd-install

- name: Create containerd temporary directory
  ansible.builtin.file:
    path: "{{ containerd_config_directory }}"
    state: directory
    mode: 0700
    owner: root
    group: root
  tags:
    - containerd-install
    - containerd-config

- name: Downloading containerd archive
  ansible.builtin.get_url:
    url: "{{ containerd_url }}"
    dest: "{{ containerd_config_dest }}"
    mode: 0644
  tags:
    - containerd-install
    - containerd-config

- name: Download containerd binary
  ansible.builtin.get_url:
    url: "{{ cd_url }}"
    dest: "{{ containerd_tmp_directory }}/containerd.tar.gz"
    mode: 0600
  tags:
    - containerd-install
    - containerd-download


- name: Unarchive containerd
  ansible.builtin.unarchive:
    src: "{{ containerd_tmp_directory }}/containerd.tar.gz"
    dest: "{{ containerd_binary_directory }}"
    remote_src: true
  tags:
    - containerd-install
    - containerd-unarchive
  
# - name: Move containerd binary to /usr/local/containerd
#   ansible.builtin.copy:
#     src: "{{ containerd_tmp_directory }}/containerd"
#     dest: "{{ containerd_binary_directory }}"
#   tags:
#     - containerd-install
#     - containerd-binary-move


- name: Download containerd.service file
  ansible.builtin.get_url:
    url: "{{ containerd_service_url }}"
    dest: "/etc/systemd/system/containerd.service"
    mode: '0644'

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start containerd service
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: yes


- name: Download runc binary
  ansible.builtin.get_url:
    url: "{{ runc_download_url }}"
    dest: "{{ runc_install_dir }}/runc.amd64"
    mode: '0755'
  tags:
    - runc-install

- name: Copy runc.amd64 to /usr/local/sbin/
  ansible.builtin.copy:
    src: "{{ runc_install_dir }}/runc.amd64"
    dest: /usr/local/sbin/runc
    mode: '0755'
    remote_src: yes

- name: Create /opt/cni/bin directory
  ansible.builtin.file:
    path: "{{ cni_plugins_install_dir }}"
    state: directory
    mode: '0755'
  become: yes

- name: Download CNI Plugins archive
  ansible.builtin.get_url:
    url: "{{ cni_url }}"
    dest: "/tmp/{{ cni_plugins_archive_name }}"


- name: Extract CNI Plugins archive
  ansible.builtin.unarchive:
    src: "/tmp/{{ cni_plugins_archive_name }}"
    dest: "{{ cni_plugins_install_dir }}"
    remote_src: true